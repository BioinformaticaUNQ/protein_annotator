[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "protein_annotator"
authors = [
    { name = "Lucas Sandoval", email = "x@x.com" },
    { name = "Mauro Portillo", email = "x@x.com" },
    { name = "Nicolas RaÃ±o", email = "x@x.com" },
    { name = "Pablo Spizzamiglio", email = "pablo.spizzamiglio@unq.edu.ar" },
]
description = "Protein Annotator"
requires-python = ">=3.8"
license.file = "LICENSE"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
]
dependencies = [
    "httpx >= 0.24.0",
    "pydantic >= 2.0.0",
    "typing-extensions >= 4.8.0",
]
dynamic = ["readme", "version"]

[project.optional-dependencies]
docs = [
    "mkdocs",
    "mkdocs-embed-external-markdown",
    "mkdocs-exclude",
    "mkdocs-material",
    "mkdocs-redirects",
    "mkdocs-simple-hooks",
    "mkdocstrings-python",
    "tomli",
    "pyupgrade",
    "mike @ git+https://github.com/jimporter/mike.git",
    "mkdocs-embed-external-markdown>=2.3.0",
]
dev = [
    "black ~= 23.11.0",
    "isort ~= 5.12.0",
    "mypy ~= 1.7.0",
    "flake8",
    "flake8-bugbear",
    "coverage[toml]",
    "pytest",
    "pytest-mock",
    "pytest-pretty",
]
test = ["coverage[toml]", "pytest", "pytest-mock", "pytest-pretty"]

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.dynamic]
version = { attr = "protein_annotator.__version__" }
readme = { file = ["README.md"] }

[tool.setuptools.packages.find]
exclude = ["tests"]
namespaces = false

[tool.setuptools.package-data]
protein_annotator = ["py.typed"]

[tool.setuptools_scm]
version_file = "src/protein_annotator/__version__.py"
version_scheme = "post-release"
local_scheme = "dirty-tag"

[tool.black]
line-length = 88
skip-string-normalization = false
target_version = ["py38", "py310", "py311", "py312"]

[tool.isort]
line_length = 88
multi_line_output = 3
combine_as_imports = true
profile = "black"
extra_standard_library = ["typing_extensions"]

[tool.mypy]
python_version = "3.8"
platform = "linux"
strict = true
show_error_codes = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = ["-vvv"]
testpaths = ["tests"]

[tool.coverage.run]
source = ["protein_annotator", "tests"]

[tool.coverage.report]
exclude_lines = [
    '\#\s*pragma: no cover',
    '^\s*raise NotImplementedError\b',
    "if typing.TYPE_CHECKING:",
]

[tool.coverage.paths]
build = ["src", "*/site-packages", '*\site-packages']

[tool.coverage.html]
show_contexts = true
